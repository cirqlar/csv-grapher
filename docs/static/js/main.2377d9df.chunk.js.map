{"version":3,"sources":["css/fileSelect.module.css","shared/csv.js","store/reducers/reducers.js","store/store.js","store/actions/actions.js","fileSelector/FileSelector.js","graph/Graph.js","App.js","index.js"],"names":["module","exports","papaPromise","file","config","a","Promise","resolve","reject","Papa","parse","complete","isEmpty","obj","key","hasOwnProperty","shared","header","labels","pConfig","results","data","fields","meta","map","v","index","formattedResults","i","length","j","push","splice","defaultConfig","chart","type","store","configureStore","reducer","state","payload","changed","sParse","sChart","sShared","connect","updateConfig","dispatch","action","then","result","string","len","fileInput","React","useRef","form","useState","setHeader","setLabels","setChanged","setFile","className","styles","container","containerClosed","onSubmit","e","preventDefault","ref","htmlFor","fileLabel","title","name","join","concat","id","accept","style","display","onClick","console","log","onChange","current","files","checkbox","checked","target","buttonForm","buttonSubmit","reset","buttonClear","color","colors","blue","green","grey","orange","purple","red","yellow","Graph","canvas","useSelector","shallowEqual","useEffect","graph","ctx","Chart","datasets","label","backgroundColor","borderColor","fill","createChart","getContext","destroy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2377d9df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fileSelect_container__1zFf7\",\"containerClosed\":\"fileSelect_containerClosed__3ndwh\",\"form\":\"fileSelect_form__1AHyU\",\"fileLabel\":\"fileSelect_fileLabel__oNakg\",\"checkbox\":\"fileSelect_checkbox__3hVZk\",\"buttonForm\":\"fileSelect_buttonForm__NUf4e\",\"buttonSubmit\":\"fileSelect_buttonSubmit__3KVba\",\"buttonClear\":\"fileSelect_buttonClear__1Sad3\"};","import React from 'react';\nimport Papa from 'papaparse';\n\nasync function papaPromise(file, config) {\n  return new Promise((resolve, reject) => {\n    Papa.parse(file, {\n      complete: resolve,\n      ...config\n    });\n  });\n}\n\nexport function isEmpty(obj) {\n  for(var key in obj) {\n      if(obj.hasOwnProperty(key))\n          return false;\n  }\n  return true;\n}\n\nexport async function parse(file, config) {\n  let { shared: { header, labels } } = config;\n  let pConfig = { ...config.parse, header };\n  const results = await papaPromise(file, pConfig);\n  const data = results.data;\n  const fields = (header) ? results.meta.fields : data[0].map((v, index) => index );\n\n  const formattedResults = {\n    '_labels': [],\n  };\n\n  for (let i = 0; i < data.length - 1; i++) {\n    for (let j = 0; j < fields.length; j++) {\n      if (labels) {\n        if (i === 0 && j !== 0) {\n          formattedResults[fields[j]] = [ data[i][fields[j]] ];\n          continue;\n        }\n        if (j === 0) {\n          formattedResults['_labels'].push(data[i][fields[j]]);\n          continue;\n        }\n        if (i !== 0 && j !== 0) {\n          formattedResults[fields[j]].push(data[i][fields[j]]);\n        }\n      } else {\n        if (i === 0) {\n          formattedResults[fields[j]] = [ data[i][fields[j]] ];\n          continue;\n        } else {\n          formattedResults[fields[j]].push(data[i][fields[j]]);\n        }\n      }\n    }\n  }\n  \n  formattedResults['_keys'] = fields.splice(1);\n\n  return formattedResults;\n}\n\n// Unused in favour of redux, but kept for reference\nexport function useCSVParser() {\n  console.log(\"Called\");\n  const [config, setConfig] = React.useState();\n  const [data, setData] = React.useState();\n\n  function set({...args} = {}) {\n    if (isEmpty(args)) {\n      setData(null);\n    } else {\n      setConfig(args);\n    }\n  }\n\n  React.useEffect(() => {\n    if (config && config.file) {\n      debugger;\n      let { file, ...conf} = config;\n      parse(file, { header: true, dynamicTyping: true, ...conf })\n        .then(results => {\n          setData(results);\n        })\n    }\n  }, [config]);\n\n  return [data, set];\n}","import { UPDATE_CONFIG } from \"../actions/actions\";\nimport { isEmpty } from '../../shared/csv';\n\nexport function data(state = null, { type, payload: { data, changed } = {} }) {\n  switch (type) {\n    case UPDATE_CONFIG:\n      if (changed) {\n        return data ?? null;\n      }   \n    // eslint-disable-next-line no-fallthrough\n    default:\n      return state;\n  }\n}\n\nconst defaultConfig = {\n  parse: {\n\n  },\n  chart: {\n    type: 'line',\n  },\n  shared: {\n    header: true,\n    labels: true,\n  }\n}\n\nexport function config(state = defaultConfig, { type, payload: { config } = {} }) {\n  switch (type) {\n    case UPDATE_CONFIG:\n      if (!isEmpty(config)) {\n        let { parse: sParse, chart: sChart, shared: sShared } = state;\n        let { parse, chart, shared } = config;\n        return {\n          parse: (isEmpty(parse)) ? sParse : {\n            ...sParse,\n            ...parse,\n          },\n          chart: (isEmpty(chart)) ? sChart : {\n            ...sChart,\n            ...chart,\n          },\n          shared: (isEmpty(shared)) ? sShared : {\n            ...sShared,\n            ...shared,\n          },\n        }\n      }\n    // eslint-disable-next-line no-fallthrough\n    default:\n      return state;\n  }\n}","import { configureStore } from \"@reduxjs/toolkit\";\nimport { data, config } from \"./reducers/reducers\";\n\n\nconst store = configureStore({\n  reducer: {\n    data,\n    config,\n  }\n});\n\nexport default store;","import { parse } from \"../../shared/csv\";\n\nexport const UPDATE_CONFIG = \"UPDATE_CONFIG\";\n\nexport function updateConfig(payload) {\n  return (dispatch) => {\n    let { config, file, changed } = payload;\n    let action = {\n      type: UPDATE_CONFIG,\n      payload: {\n        config,\n        changed,\n      }\n    }\n    if (changed) {\n      if (file) {\n        return parse(file, config)\n          .then(result => {\n            action.payload.data = result;\n            return dispatch(action);\n          });\n      }\n      action.payload.data = null;\n      return dispatch(action);\n    }\n    return dispatch(action);\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateConfig } from '../store/actions/actions';\nimport styles from '../css/fileSelect.module.css';\n\nfunction trunc(string, len) {\n  if (string.length > len) {\n    return [...string].splice(0, len-3).join('').concat('...');\n  } else {\n    return string;\n  }\n}\n\n\nfunction FileSelector({ data, config: { parse, chart, shared }, updateConfig }) {\n  const fileInput = React.useRef();\n  const form = React.useRef();\n\n  const [header, setHeader] = React.useState(shared.header);\n  const [labels, setLabels] = React.useState(shared.labels);\n  const [changed, setChanged] = React.useState(false);\n  const [file, setFile] = React.useState();\n\n  const handleSubmit = () => {\n    const payload = {\n      file,\n      changed,\n      config: {\n        shared: {\n          header,\n          labels,\n        }        \n      }\n    }\n    updateConfig(payload);\n    setChanged(false);\n  }\n\n\n\treturn (\n    <div className={styles.container + \" \" + ((!data) ? \"\" : styles.containerClosed)}>\n      <h1>CSV Grapher</h1>\n      <form onSubmit={e => {\n        e.preventDefault();\n        handleSubmit();\n      }} className={styles.form} ref={form} >\n        <label \n          htmlFor='file' \n          className={styles.fileLabel}\n          title={ (data || (file && changed)) ? file.name : \"Select File\" }\n        >\n          { (data || (file && changed)) ? trunc(file.name, (data ? 10 : 20)) : \"Select File\" }\n        </label>\n        <input \n          type='file' \n          id='file'\n          ref={fileInput} \n          accept=\".csv,.txt\" \n          style={{ display: \"none\" }}\n          onClick={() => console.log(\"File clicked\") }\n          onChange={() => { setFile(fileInput.current.files[0]); setChanged(true) } }\n        />\n        <label htmlFor=\"header\" className={styles.checkbox}>Header\n          <input\n            type=\"checkbox\"\n            id=\"header\"\n            checked={header}\n            onChange={e => { setHeader(e.target.checked); setChanged(true) }}\n          />\n        </label>\n        <label htmlFor=\"labels\" className={styles.checkbox}>Labels\n          <input\n            type=\"checkbox\"\n            id=\"labels\"\n            checked={labels}\n            onChange={e => { setLabels(e.target.checked); setChanged(true) }}\n          />\n        </label>\n        <button type=\"submit\" className={`${styles.buttonForm} ${styles.buttonSubmit}`}>Submit</button>\n        <button \n          onClick={() => {\n            form.current.reset();\n            updateConfig({ changed: true, file: null });\n          }}\n          className={`${styles.buttonForm} ${styles.buttonClear}`}\n        >Clear</button>\n      </form>\n    </div>\n\t);\n}\n\nfunction mapStateToProps(state) {\n  let { data, config } = state;\n  return {\n    data,\n    config,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateConfig,\n  },\n)(FileSelector);","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport Chart from 'chart.js';\n\nlet color = [\"blue\", \"green\", \"grey\", \"orange\", \"purple\", \"red\", \"yellow\"];\nlet colors = {\n  blue: \"rgb(54, 162, 235)\",\n  green: \"rgb(75, 192, 192)\",\n  grey: \"rgb(201, 203, 207)\",\n  orange: \"rgb(255, 159, 64)\",\n  purple: \"rgb(153, 102, 255)\",\n  red: \"rgb(255, 99, 132)\",\n  yellow: \"rgb(255, 205, 86)\",\n}\n\nfunction createChart(ctx, data) {\n  let graph = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: data['_labels'],\n      datasets: data['_keys'].map((key, index) => {\n        return {\n          label: key,\n          backgroundColor: colors[color[index]],\n          borderColor: colors[color[index]],\n          data: data[key],\n          fill: false,\n        };\n      }),\n    },\n  });\n  return graph  \n}\n\nfunction Graph() {\n  let canvas = React.useRef();\n  let { data, config } = useSelector(state => state, shallowEqual);\n\n  React.useEffect(() => {\n    let graph = createChart(canvas.current.getContext('2d'), data, config);\n    return () => graph.destroy();\n  })\n\n  return (\n    <canvas ref={canvas}></canvas>\n  );\n}\n\nexport default Graph;","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport FileSelector from \"./fileSelector/FileSelector\";\nimport Graph from './graph/Graph';\n\nfunction App() {\n  const data = useSelector((state) => state.data, shallowEqual);\n\n  return (\n    <>\n      <FileSelector />\n      { data && <Graph /> }\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'normalize.css';\n\nimport store from './store/store';\nimport './css/global.css'\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App></App>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}